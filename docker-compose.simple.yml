version: "3.8"

services:
  # üóÑÔ∏è PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cloud-video-postgres
    environment:
      POSTGRES_DB: cloud_video_monitoring
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: cloud_video_secure_2025
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - video-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cloud_video_monitoring"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üóÉÔ∏è Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cloud-video-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - video-monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üé• Backend API
  backend-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cloud-video-backend
    environment:
      - DATABASE_URL=postgresql://postgres:cloud_video_secure_2025@postgres:5432/cloud_video_monitoring
      - REDIS_URL=redis://redis:6379/0
      - LIVEPEER_API_KEY=40d145e9-4cae-4913-89a2-fcd1c4fa3bfb
      - SECRET_KEY=your_super_secret_key_here_2025
      - DEBUG=true
      - USE_SQLITE=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cloud_video_monitoring
      - DB_USER=postgres
      - DB_PASSWORD=cloud_video_secure_2025
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    networks:
      - video-monitoring
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
          "||",
          "exit",
          "1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # üåê Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: cloud-video-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - REACT_APP_LIVEPEER_API_KEY=40d145e9-4cae-4913-89a2-fcd1c4fa3bfb
      - NODE_ENV=development
    depends_on:
      - backend-api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - video-monitoring
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
          "||",
          "exit",
          "1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  video-monitoring:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
