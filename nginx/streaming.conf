# üåê NGINX Configuration for Video Streaming
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Upstream for video streaming service
    upstream video_streaming {
        server video-streamer:8006;
    }
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=streaming:10m rate=10r/s;
    
    server {
        listen 80;
        server_name localhost;
        
        # Client max body size for uploads
        client_max_body_size 500M;
        
        # Proxy timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Root directory
        root /usr/share/nginx/html;
        
        # Main application
        location / {
            try_files $uri $uri/ /static/index.html;
        }
        
        # API endpoints - proxy to streaming service
        location /api/ {
            limit_req zone=streaming burst=20 nodelay;
            
            proxy_pass http://video_streaming;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle file uploads
            proxy_request_buffering off;
        }
        
        # WebSocket streaming
        location /ws/ {
            proxy_pass http://video_streaming;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Video streaming with range support
        location /stream/ {
            limit_req zone=streaming burst=50 nodelay;
            
            proxy_pass http://video_streaming;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Range $http_range;
            
            # Enable range requests
            proxy_set_header Accept-Ranges bytes;
            
            # Cache headers for video content
            add_header Cache-Control "public, max-age=3600";
        }
        
        # HLS streaming - serve directly from NGINX
        location /hls/ {
            alias /usr/share/nginx/html/hls/;
            
            # CORS headers for HLS
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
            add_header Access-Control-Allow-Headers Range;
            
            # Cache control for HLS segments
            location ~* \.m3u8$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
            }
            
            location ~* \.ts$ {
                add_header Cache-Control "public, max-age=86400";
            }
        }
        
        # Static files
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1d;
            add_header Cache-Control "public, immutable";
        }
        
        # Direct video file access (for development)
        location /videos/ {
            alias /usr/share/nginx/html/videos/;
            
            # Enable range requests
            add_header Accept-Ranges bytes;
            
            # Cache headers
            expires 1h;
            add_header Cache-Control "public";
        }
        
        # Health check
        location /health {
            proxy_pass http://video_streaming/health;
        }
        
        # Metrics endpoint
        location /metrics {
            proxy_pass http://video_streaming/metrics;
        }
        
        # Error pages
        error_page 404 /static/404.html;
        error_page 500 502 503 504 /static/50x.html;
    }
    
    # SSL configuration (for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /path/to/cert.pem;
    #     ssl_certificate_key /path/to/key.pem;
    #     
    #     # Include above location blocks
    # }
}
